// Ignore Spelling: Pdf

using ExcelReader.RyanW84.Helpers;
using ExcelReader.RyanW84.Services;
using ExcelReader.RyanW84.UserInterface;

namespace ExcelReader.RyanW84.Controller;

public class PdfFormController
{
    private readonly ReadFromPdfForm _readFromPdfForm;
    private readonly WriteToPdfForm _writeToPdfForm;
    private readonly WritePdfFormDataToDatabaseService _writePdfFormDataToDatabaseService;
    private readonly PdfFormWriteUi _pdfFormWriteUi;
    private readonly FilePathManager _filePathManager;
    private readonly UserNotifier _userNotifier;

    public PdfFormController(
        ReadFromPdfForm readFromPdfForm,
        WriteToPdfForm writeToPdfForm,
        WritePdfFormDataToDatabaseService writePdfFormDataToDatabaseService,
        PdfFormWriteUi pdfFormWriteUi,
        FilePathManager filePathManager,
        UserNotifier userNotifier
    )
    {
        _readFromPdfForm = readFromPdfForm;
        _writeToPdfForm = writeToPdfForm;
        _writePdfFormDataToDatabaseService = writePdfFormDataToDatabaseService;
        _pdfFormWriteUi = pdfFormWriteUi;
        _filePathManager = filePathManager;
        _userNotifier = userNotifier;
    }

    public async Task AddOrUpdateDataFromPdfForm(string? filePath = null)
    {
        // 1. Get the file path using FilePathManager
        string selectedPath;
        try
        {
            selectedPath = _filePathManager.GetFilePath(FilePathManager.FileType.PDF, filePath);
        }
        catch (FilePathValidationException ex)
        {
            _userNotifier.ShowError($"PDF file path error: {ex.Message}");
            return;
        }

        // 2. Read existing fields from PDF
        var fields = await _readFromPdfForm.ReadFormFieldsAsync(selectedPath);
        if (fields.Count == 0)
        {
            _userNotifier.ShowError("No form fields found or file not found.");
            return;
        }

        // 3. Pass fields to UI for user to update
        var updatedFields = _pdfFormWriteUi.GatherUpdatedFields(fields);

        // 4. Write updated fields back to PDF form
        await _writeToPdfForm.WriteFormFieldsAsync(selectedPath, updatedFields);

        // 5. Add updated data to the database
        await _writePdfFormDataToDatabaseService.WriteAsync(updatedFields);

        _userNotifier.ShowSuccess("PDF form updated and data imported to SQL table.");
    }
}
