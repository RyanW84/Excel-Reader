using System.Data;
using ExcelReader.RyanW84.Services;

namespace ExcelReader.RyanW84.Controller;

public class PdfFormController(ReadFromPdfForm readFromPdfForm , CreateTableFromPdfForm createTableFromPdfForm)
{
    private readonly ReadFromPdfForm _readFromPdfForm = readFromPdfForm;
    private readonly CreateTableFromPdfForm _createTableFromPdfForm = createTableFromPdfForm;

	public void AddDataFromPdfForm(string filePath)
    {
        Console.WriteLine($"\nReading PDF form fields from: {filePath}");
        var fields = _readFromPdfForm.ReadFormFields(filePath);
        if (fields.Count == 0)
        {
            Console.WriteLine("No form fields found or file not found.");
            return;
        }

        // Create DataTable with columns from field labels
        var dataTable = new DataTable("PdfFormImport");

        foreach (var key in fields.Keys)
        {
            dataTable.Columns.Add(key);
        }

        // Add a single row with the field values
        var row = dataTable.NewRow();
        foreach (var kvp in fields)
        {
            row[kvp.Key] = kvp.Value ?? string.Empty;
        }
        dataTable.Rows.Add(row);

		Console.WriteLine($"Rows counted: {dataTable.Rows.Count}");
		Console.WriteLine($"Fields counted: {dataTable.Columns.Count}");

		_createTableFromPdfForm.CreateTableFromPdfFormData(dataTable);
        Console.WriteLine("PDF form data imported to SQL table.");
    }
}
