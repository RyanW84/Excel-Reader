using System.Data;
using Microsoft.AspNetCore.Mvc;
using ExcelReader.RyanW84.Services;

namespace ExcelReader.RyanW84.Controller;

[ApiController]
[Route("api/[controller]")]
public class PdfFormController : ControllerBase
{
    private readonly ReadFromPdfForm _readFromPdfForm;
    private readonly CreateTableFromPdfForm _createTableFromPdfForm;

    public PdfFormController(ReadFromPdfForm readFromPdfForm, CreateTableFromPdfForm createTableFromPdfForm)
    {
        _readFromPdfForm = readFromPdfForm;
        _createTableFromPdfForm = createTableFromPdfForm;
    }

    [HttpPost("import")]
    public IActionResult AddDataFromPdfForm([FromBody] string filePath)
    {
        if (string.IsNullOrWhiteSpace(filePath))
        {
            return BadRequest("File path is required.");
        }

        var fields = _readFromPdfForm.ReadFormFields(filePath);
        if (fields.Count == 0)
        {
            return NotFound("No form fields found or file not found.");
        }

        var dataTable = new DataTable("PdfFormImport");
        foreach (var key in fields.Keys)
        {
            dataTable.Columns.Add(key);
        }
        var row = dataTable.NewRow();
        foreach (var kvp in fields)
        {
            row[kvp.Key] = kvp.Value ?? string.Empty;
        }
        dataTable.Rows.Add(row);

        _createTableFromPdfForm.CreateTableFromPdfFormData(dataTable);
        return Ok("PDF form data imported to SQL table.");
    }
}
