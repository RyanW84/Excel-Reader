// Services\ReadFromPdf.cs
using System.Data;
using ExcelReader.RyanW84.Abstractions;
using ExcelReader.RyanW84.Helpers;
using iText.Kernel.Pdf;
using iText.Kernel.Pdf.Canvas.Parser;
using iText.Kernel.Pdf.Canvas.Parser.Listener;

namespace ExcelReader.RyanW84.Services;

public class ReadFromPdf : IPdfTableReader
{
    private readonly IFilePathService _filePathManager;
    private readonly INotificationService _userNotifier;

    public ReadFromPdf(IFilePathService filePathManager, INotificationService userNotifier)
    {
        _filePathManager = filePathManager;
        _userNotifier = userNotifier;
    }

    public async Task<List<string[]>> ReadPdfFileAsync()
    {
        string filePath;
        try
        {
            var customDefault = @"C:\\Users\\Ryanw\\OneDrive\\Documents\\GitHub\\Excel-Reader\\Data\\TablePDF.pdf";
            filePath = _filePathManager.GetFilePath(FileType.PDF, customDefault);
        }
        catch (FilePathValidationException ex)
        {
            _userNotifier.ShowError($"PDF file path error: {ex.Message}");
            return [];
        }

        // Rest of the method implementation...
    }

    public List<string[]> ReadPdfFile()
    {
        return ReadPdfFileAsync().GetAwaiter().GetResult();
    }
    
    // Other methods...
}