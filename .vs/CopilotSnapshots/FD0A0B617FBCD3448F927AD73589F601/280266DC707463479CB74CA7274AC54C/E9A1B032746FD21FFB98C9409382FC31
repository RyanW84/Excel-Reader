using ExcelReader.RyanW84.Controller;
using ExcelReader.RyanW84.Data;
using ExcelReader.RyanW84.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;

namespace ExcelReader.RyanW84
{
    public class Program
    {
        public static void Main(string[] args)
        {
            var host = CreateHostBuilder(args).Build();
            ProcessExcelData(host.Services);
        }

        private static IHostBuilder CreateHostBuilder(string[] args) =>
            Host.CreateDefaultBuilder(args)
                .ConfigureServices(
                    (hostContext, services) =>
                    {
                        var connectionString = hostContext.Configuration.GetConnectionString(
                            "DefaultConnection"
                        );
                        Console.WriteLine($"Connection String: {connectionString}");

                        services.AddDbContext<ExcelReaderDbContext>(options =>
                            options.UseSqlServer(connectionString)
                        );
                        services.AddScoped<ExcelBeginnerController>();
                        services.AddScoped<AnyExcelReadController>();
                        services.AddScoped<CsvController>();
                        services.AddScoped<ReadFromCsv>();
                        services.AddScoped<CreateTableFromCSV>();
                        services.AddScoped<CreateTableFromAnyExcel>();
                    }
                );

        private static void ProcessExcelData(IServiceProvider services)
        {
            void RunInScope(Action<IServiceProvider> action)
            {
                using var scope = services.CreateScope();
                action(scope.ServiceProvider);
            }

            RunInScope(sp =>
            {
                var context = sp.GetRequiredService<ExcelReaderDbContext>();
                context.Database.EnsureDeleted();
                context.Database.EnsureCreated();
            });

            RunInScope(sp =>
            {
                var context = sp.GetRequiredService<ExcelReaderDbContext>();
                context.Database.EnsureDeleted();
                context.Database.EnsureCreated();

                var excelBeginnerController = sp.GetRequiredService<ExcelBeginnerController>();
                excelBeginnerController.AddDataFromExcel();
            });

            RunInScope(sp =>
            {
                var anyExcelReadController = sp.GetRequiredService<AnyExcelReadController>();
                anyExcelReadController.AddDataFromExcel();
            });

            RunInScope(sp =>
            {
                var csvController = sp.GetRequiredService<CsvController>();
                csvController.AddDataFromCsv();
            });
        }
    }
}
